# Server configuration
server.port=8080

# PostgreSQL Database Configuration for Render
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT (JSON Web Token) configuration
jwt.secret=ThisIsAReallyLongAndStrongSecretKeyForJWTAuthenticationThatNeedsToBeAtLeast256BitsLongAndShouldBeStoredSecurelyInAProductionEnvironment
jwt.expirationMs=3600000

# Gemini API configuration (REQUIRED FOR AI SERVICE)
# IMPORTANT: Replace 'YOUR_GEMINI_API_KEY_HERE' with your actual Gemini API key.
# You can can get one from Google AI Studio or Google Cloud Console.
gemini.api.key=AIzaSyCuV5lSmmLeDytxb4gvpSF61Bg9BWCTqEU
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent

# Enable DEBUG logging for web requests and Spring Security (Optional, for more detailed logs)
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG